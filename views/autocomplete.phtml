<?php
$baseName = basename($_SERVER['PHP_SELF']);
$funcName = md5($_SERVER['PHP_SELF'])
?>
#!/bin/sh
#
# == System wide installation ==
# To install the autocompletion for bash, and hopefully zsh copy the complete
# content of this file to /etc/bash_completion.d/<?php echo $baseName ?>.sh .
#
# The easies way will be to run
# $ sudo <?php echo $_SERVER['PHP_SELF'] ?> auto-complete > /etc/bash_completion.d/<?php echo $baseName ?>.sh
# $ source /etc/bash_completion.d/<?php echo $baseName ?>.sh
#
# == Installation for the local user only ==
# Try these commands
# $ <?php echo $_SERVER['PHP_SELF'] ?> auto-complete >> ~/.bashrc
# $ source ~/.bashrc
#

if [[ -n ${ZSH_VERSION-} ]]; then
    autoload -U +X bashcompinit && bashcompinit
fi

_complete_<?php echo $funcName ?>() {
    local cur

    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"

    # Assume first word is the actual app/console command
    console="${COMP_WORDS[0]}"

    if [[ ${COMP_CWORD} == 1 ]] ; then
        # No command found, return the list of available commands
        cmds=` ${console} help | sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g" | grep "^ [a-z\-]\{1,\}[[:space:]]\{1,\}" | awk '{print $1}'`
    else
        # Commands found, parse options
        RESULT=`${console} ${COMP_WORDS[1]} --help`
        cmds=` echo "$RESULT" | sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g" | grep '^ -' | awk '{ print $1 }'`
        cmds=`echo -e "$cmds\n--help"` # --help is a non existing option, BUT it will give back the help for a command which is what we want
    fi

    COMPREPLY=( $(compgen -W "${cmds}" -- ${cur}) )
    return 0
}

export COMP_WORDBREAKS="\ \"\\'><=;|&("
complete -F _complete_<?php echo $funcName ?> <?php echo $baseName ?>
<?php echo "\n" ?>
